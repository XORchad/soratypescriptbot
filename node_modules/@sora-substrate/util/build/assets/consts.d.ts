import type { AccountBalance, Asset } from './types';
export declare const MaxRustNumber = "170141183460469231731.687303715884105727";
export declare const MaxTotalSupply = "100000000000000000000";
export declare enum KnownSymbols {
    XOR = "XOR",
    VAL = "VAL",
    PSWAP = "PSWAP",
    DAI = "DAI",
    ETH = "ETH",
    XSTUSD = "XSTUSD",
    XST = "XST",
    TBCD = "TBCD"
}
export declare const ZeroBalance: AccountBalance;
export declare enum BalanceType {
    Free = "free",
    Reserved = "reserved",
    Frozen = "frozen",
    Bonded = "bonded",
    Locked = "locked",
    Total = "total",
    Transferable = "transferable"
}
declare class ArrayLike<T> extends Array<T> {
    constructor(items?: Array<T>);
    private addItems;
    contains(info: string): boolean;
    /**
     * **ONLY** for known assets
     */
    get(info: string): T;
}
export declare const NativeAssets: ArrayLike<Asset>;
export declare const KnownAssets: ArrayLike<Asset>;
export declare const XOR: Asset;
export declare const VAL: Asset;
export declare const PSWAP: Asset;
export declare const XSTUSD: Asset;
export declare const DAI: Asset;
export declare const ETH: Asset;
export declare const XST: Asset;
export declare const TBCD: Asset;
export {};
