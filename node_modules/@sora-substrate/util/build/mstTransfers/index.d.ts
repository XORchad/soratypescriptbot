import { NumberLike, CodecString } from '@sora-substrate/math';
import type { SubmittableExtrinsic } from '@polkadot/api/promise/types';
import type { Api } from '../api';
/**
 * This module is used for internal needs
 */
export declare class MstTransfersModule<T> {
    private readonly root;
    constructor(root: Api<T>);
    /**
     * Returns batch tx
     * @param data List with data for Transfer All Tx
     */
    prepareCall(data: Array<{
        assetAddress: string;
        toAddress: string;
        amount: NumberLike;
    }>): SubmittableExtrinsic;
    /**
     * Returns the final extrinsic for Trnaser All MST transaction
     * @param call `api.prepareTransferAllAsMstCall` result
     * @param threshold Minimum number of signers
     * @param coSigners List of co-signers
     */
    prepareExtrinsic(call: SubmittableExtrinsic, threshold: number, coSigners: Array<string>): SubmittableExtrinsic;
    /**
     * Get network fee for Transfer All MST Tx
     * @param extrinsic `api.prepareTransferAllAsMstExtrinsic` result
     */
    getNetworkFee(tx: SubmittableExtrinsic): Promise<CodecString>;
    /**
     * Transfer all data from array as MST
     * @param extrinsic `api.prepareTransferAllAsMstExtrinsic` result
     */
    submit(extrinsic: SubmittableExtrinsic): Promise<T>;
    /**
     * Get the last (frist from array of multisigns) pending TX from MST
     * @param mstAccount MST account
     */
    getLastPendingTx(mstAccount: string): Promise<string | null>;
}
