import { StakingRewardsDestination, RewardPointsIndividual, StashNominatorsInfo, ValidatorExposure } from './types';
import type { Option, u32 } from '@polkadot/types';
import type { PalletStakingEraRewardPoints, PalletStakingNominations } from '@polkadot/types/lookup';
import type { Exposure } from '@polkadot/types/interfaces/staking';
declare const formatEra: (data: Option<u32>) => number;
declare const formatIndividualRewardPoints: (data: PalletStakingEraRewardPoints) => RewardPointsIndividual;
declare const formatNominations: (codec: Option<PalletStakingNominations>) => StashNominatorsInfo | null;
declare const formatPayee: (payee: StakingRewardsDestination | string) => string | {
    Account: string;
};
declare const formatValidatorExposure: (codec: Exposure) => ValidatorExposure;
export { formatEra, formatPayee, formatNominations, formatValidatorExposure, formatIndividualRewardPoints };
