import type { CodecString } from '@sora-substrate/math';
import type { Operation, History } from '../../BaseApi';
import type { BridgeTxStatus, BridgeNetworkType } from '../consts';
import type { EvmNetworkId, EvmAppKinds } from './consts';
export declare type EvmNetwork = EvmNetworkId | number;
export declare type EvmNetworkParam = {
    [BridgeNetworkType.Evm]: EvmNetwork;
};
export interface EvmHistory extends History {
    type: Operation.EvmIncoming | Operation.EvmOutgoing;
    hash?: string;
    transactionState?: BridgeTxStatus;
    externalBlockId?: string;
    externalBlockHeight?: number;
    externalHash?: string;
    externalNetwork?: EvmNetwork;
    externalNetworkType?: BridgeNetworkType;
    externalNetworkFee?: CodecString;
}
export declare type EvmAsset = {
    address: string;
    appKind: EvmAppKinds;
    decimals: number;
};
/**
 * Mapping between app kind and smart contract address
 */
export declare type EvmSupportedApp = Record<EvmAppKinds, string>;
