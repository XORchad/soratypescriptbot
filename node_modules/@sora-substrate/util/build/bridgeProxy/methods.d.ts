import type { Observable } from '@polkadot/types/types';
import type { ApiPromise, ApiRx } from '@polkadot/api';
import type { CodecString } from '@sora-substrate/math';
import { BridgeNetworkType } from './consts';
import type { BridgeNetworkParam, BridgeNetworkId, BridgeTransactionData } from './types';
import type { ParachainIds } from './sub/types';
/**
 * Get all user transactions from external network
 */
export declare function getUserTransactions(api: ApiPromise, accountAddress: string, networkParam: BridgeNetworkParam, networkId: BridgeNetworkId, networkType: BridgeNetworkType, parachainIds?: ParachainIds): Promise<BridgeTransactionData[]>;
/** Get transaction details */
export declare function getTransactionDetails(api: ApiPromise, accountAddress: string, hash: string, networkParam: BridgeNetworkParam, networkId: BridgeNetworkId, networkType: BridgeNetworkType, parachainIds?: ParachainIds): Promise<BridgeTransactionData | null>;
/** Subscribe on transaction details */
export declare function subscribeOnTransactionDetails(apiRx: ApiRx, accountAddress: string, hash: string, networkParam: BridgeNetworkParam, networkId: BridgeNetworkId, networkType: BridgeNetworkType, parachainIds?: ParachainIds): Observable<BridgeTransactionData | null> | null;
/** Get the amount of the asset locked on the bridge on the SORA side */
export declare function getLockedAssets(api: ApiPromise, networkParam: BridgeNetworkParam, assetAddress: string): Promise<CodecString | null>;
