"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Storage = exports.AccountStorage = void 0;
class Storage {
  constructor() {
    let namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'sora';
    this.namespace = void 0;
    this.namespace = namespace;
  }
  all() {
    return Object.entries(localStorage).filter(_ref => {
      let [key] = _ref;
      return key.startsWith(this.namespace);
    });
  }
  get(key) {
    var _localStorage$getItem;
    return (_localStorage$getItem = localStorage.getItem(`${this.namespace}.${key}`)) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '';
  }
  set(key, value) {
    localStorage.setItem(`${this.namespace}.${key}`, value);
  }
  remove(key) {
    localStorage.removeItem(`${this.namespace}.${key}`);
  }
  clear() {
    this.all().forEach(_ref2 => {
      let [key] = _ref2;
      return localStorage.removeItem(key);
    });
  }
}
exports.Storage = Storage;
class AccountStorage extends Storage {
  constructor(identity) {
    if (!identity) {
      throw new Error('AccountStorage: identity is required');
    }
    super(`account:${identity}`);
  }
}
exports.AccountStorage = AccountStorage;