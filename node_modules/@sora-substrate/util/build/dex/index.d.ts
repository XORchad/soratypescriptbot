import { DexId } from './consts';
import type { Api } from '../api';
import type { DexInfo } from './types';
import { LiquiditySourceTypes } from '@sora-substrate/liquidity-proxy';
export declare class DexModule<T> {
    private readonly root;
    constructor(root: Api<T>);
    static defaultDexId: DexId;
    static defaultBaseAssetId: string;
    static defaultSyntheticAssetId: string;
    dexList: DexInfo[];
    lockedSources: LiquiditySourceTypes[];
    enabledSources: LiquiditySourceTypes[];
    get publicDexes(): DexInfo[];
    get poolBaseAssetsIds(): string[];
    get baseAssetsIds(): string[];
    update(): Promise<void>;
    updateList(): Promise<void>;
    updateLockedSources(): Promise<void>;
    updateEnabledSources(): Promise<void>;
    getDexId(baseAssetId: string): number;
    getBaseAssetId(dexId: number): string;
    getSyntheticBaseAssetId(dexId: number): string;
}
