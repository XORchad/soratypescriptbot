"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bandQuoteUnchecked = exports.bandQuote = void 0;
const bandQuote = (symbol, payload) => {
  if (!(symbol in payload.rates)) {
    throw new Error(`[liquidityProxy] Band: Rate not exists for symbol "${symbol}"`);
  }
  const rate = payload.rates[symbol];
  const currentTime = Date.now(); // ms
  const stalePeriod = payload.consts.band.rateStalePeriod; //ms
  const lastUpdated = rate.lastUpdated * 1000; //ms

  if (lastUpdated >= currentTime) {
    throw new Error(`[liquidityProxy] Band: "${symbol}" Rate has invalid timestamp: "${lastUpdated}"`);
  }
  const currentPeriod = currentTime - lastUpdated;
  if (currentPeriod > stalePeriod) {
    throw new Error(`[liquidityProxy] Band: "${symbol}" Rate is expired and can't be used until next update`);
  }
  return rate;
};
exports.bandQuote = bandQuote;
const bandQuoteUnchecked = (symbol, payload) => {
  return payload.rates[symbol];
};
exports.bandQuoteUnchecked = bandQuoteUnchecked;