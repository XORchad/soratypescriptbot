import { FPNumber, CodecString } from '@sora-substrate/math';
import { LiquiditySourceTypes, AssetType } from './consts';
import type { QuoteResult } from './types';
export declare const toFp: (item: CodecString) => FPNumber;
export declare const getMaxPositive: (value: FPNumber) => FPNumber;
export declare const isAssetAddress: (a: string, b: string) => boolean;
export declare const isXorAsset: (asset: string, dexBaseAsset?: string) => boolean;
export declare const matchType: (iType: AssetType, oType: AssetType) => (a: AssetType, b: AssetType, bidirect?: boolean) => boolean;
export declare const isBetter: (isDesiredInput: boolean, amountA: FPNumber, amountB: FPNumber) => boolean;
export declare const extremum: (isDesiredInput: boolean) => FPNumber;
export declare const intersection: <T>(a: T[], b: T[]) => T[];
export declare const safeDivide: (value: FPNumber, divider: FPNumber) => FPNumber;
export declare const safeQuoteResult: (inputAsset: string, outputAsset: string, amount: FPNumber, market: LiquiditySourceTypes) => QuoteResult;
